/**
 * Autogenerated by Avro
 *
 * <p>DO NOT EDIT DIRECTLY
 */
package org.icgc_argo.workflow.search.rabbitmq.schema;

import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.SchemaStore;
import org.apache.avro.specific.SpecificData;

@org.apache.avro.specific.AvroGenerated
public class EngineParams extends org.apache.avro.specific.SpecificRecordBase
    implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -532638805031299122L;
  public static final org.apache.avro.Schema SCHEMA$ =
      new org.apache.avro.Schema.Parser()
          .parse(
              "{\"type\":\"record\",\"name\":\"EngineParams\",\"namespace\":\"org.icgc_argo.workflow.search.rabbitmq.schema\",\"fields\":[{\"name\":\"defaultContainer\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"revision\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"launchDir\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"projectDir\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"workDir\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"latest\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"resume\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}");

  public static org.apache.avro.Schema getClassSchema() {
    return SCHEMA$;
  }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<EngineParams> ENCODER =
      new BinaryMessageEncoder<EngineParams>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<EngineParams> DECODER =
      new BinaryMessageDecoder<EngineParams>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   *
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<EngineParams> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   *
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<EngineParams> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link
   * SchemaStore}.
   *
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<EngineParams> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<EngineParams>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this EngineParams to a ByteBuffer.
   *
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a EngineParams from a ByteBuffer.
   *
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a EngineParams instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of
   *     this class
   */
  public static EngineParams fromByteBuffer(java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private java.lang.String defaultContainer;
  private java.lang.String revision;
  private java.lang.String launchDir;
  private java.lang.String projectDir;
  private java.lang.String workDir;
  private java.lang.Boolean latest;
  private java.lang.String resume;

  /**
   * Default constructor. Note that this does not initialize fields to their default values from the
   * schema. If that is desired then one should use <code>newBuilder()</code>.
   */
  public EngineParams() {}

  /**
   * All-args constructor.
   *
   * @param defaultContainer The new value for defaultContainer
   * @param revision The new value for revision
   * @param launchDir The new value for launchDir
   * @param projectDir The new value for projectDir
   * @param workDir The new value for workDir
   * @param latest The new value for latest
   * @param resume The new value for resume
   */
  public EngineParams(
      java.lang.String defaultContainer,
      java.lang.String revision,
      java.lang.String launchDir,
      java.lang.String projectDir,
      java.lang.String workDir,
      java.lang.Boolean latest,
      java.lang.String resume) {
    this.defaultContainer = defaultContainer;
    this.revision = revision;
    this.launchDir = launchDir;
    this.projectDir = projectDir;
    this.workDir = workDir;
    this.latest = latest;
    this.resume = resume;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() {
    return MODEL$;
  }

  public org.apache.avro.Schema getSchema() {
    return SCHEMA$;
  }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
      case 0:
        return defaultContainer;
      case 1:
        return revision;
      case 2:
        return launchDir;
      case 3:
        return projectDir;
      case 4:
        return workDir;
      case 5:
        return latest;
      case 6:
        return resume;
      default:
        throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value = "unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
      case 0:
        defaultContainer = value$ != null ? value$.toString() : null;
        break;
      case 1:
        revision = value$ != null ? value$.toString() : null;
        break;
      case 2:
        launchDir = value$ != null ? value$.toString() : null;
        break;
      case 3:
        projectDir = value$ != null ? value$.toString() : null;
        break;
      case 4:
        workDir = value$ != null ? value$.toString() : null;
        break;
      case 5:
        latest = (java.lang.Boolean) value$;
        break;
      case 6:
        resume = value$ != null ? value$.toString() : null;
        break;
      default:
        throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'defaultContainer' field.
   *
   * @return The value of the 'defaultContainer' field.
   */
  public java.lang.String getDefaultContainer() {
    return defaultContainer;
  }

  /**
   * Sets the value of the 'defaultContainer' field.
   *
   * @param value the value to set.
   */
  public void setDefaultContainer(java.lang.String value) {
    this.defaultContainer = value;
  }

  /**
   * Gets the value of the 'revision' field.
   *
   * @return The value of the 'revision' field.
   */
  public java.lang.String getRevision() {
    return revision;
  }

  /**
   * Sets the value of the 'revision' field.
   *
   * @param value the value to set.
   */
  public void setRevision(java.lang.String value) {
    this.revision = value;
  }

  /**
   * Gets the value of the 'launchDir' field.
   *
   * @return The value of the 'launchDir' field.
   */
  public java.lang.String getLaunchDir() {
    return launchDir;
  }

  /**
   * Sets the value of the 'launchDir' field.
   *
   * @param value the value to set.
   */
  public void setLaunchDir(java.lang.String value) {
    this.launchDir = value;
  }

  /**
   * Gets the value of the 'projectDir' field.
   *
   * @return The value of the 'projectDir' field.
   */
  public java.lang.String getProjectDir() {
    return projectDir;
  }

  /**
   * Sets the value of the 'projectDir' field.
   *
   * @param value the value to set.
   */
  public void setProjectDir(java.lang.String value) {
    this.projectDir = value;
  }

  /**
   * Gets the value of the 'workDir' field.
   *
   * @return The value of the 'workDir' field.
   */
  public java.lang.String getWorkDir() {
    return workDir;
  }

  /**
   * Sets the value of the 'workDir' field.
   *
   * @param value the value to set.
   */
  public void setWorkDir(java.lang.String value) {
    this.workDir = value;
  }

  /**
   * Gets the value of the 'latest' field.
   *
   * @return The value of the 'latest' field.
   */
  public java.lang.Boolean getLatest() {
    return latest;
  }

  /**
   * Sets the value of the 'latest' field.
   *
   * @param value the value to set.
   */
  public void setLatest(java.lang.Boolean value) {
    this.latest = value;
  }

  /**
   * Gets the value of the 'resume' field.
   *
   * @return The value of the 'resume' field.
   */
  public java.lang.String getResume() {
    return resume;
  }

  /**
   * Sets the value of the 'resume' field.
   *
   * @param value the value to set.
   */
  public void setResume(java.lang.String value) {
    this.resume = value;
  }

  /**
   * Creates a new EngineParams RecordBuilder.
   *
   * @return A new EngineParams RecordBuilder
   */
  public static org.icgc_argo.workflow.search.rabbitmq.schema.EngineParams.Builder newBuilder() {
    return new org.icgc_argo.workflow.search.rabbitmq.schema.EngineParams.Builder();
  }

  /**
   * Creates a new EngineParams RecordBuilder by copying an existing Builder.
   *
   * @param other The existing builder to copy.
   * @return A new EngineParams RecordBuilder
   */
  public static org.icgc_argo.workflow.search.rabbitmq.schema.EngineParams.Builder newBuilder(
      org.icgc_argo.workflow.search.rabbitmq.schema.EngineParams.Builder other) {
    if (other == null) {
      return new org.icgc_argo.workflow.search.rabbitmq.schema.EngineParams.Builder();
    } else {
      return new org.icgc_argo.workflow.search.rabbitmq.schema.EngineParams.Builder(other);
    }
  }

  /**
   * Creates a new EngineParams RecordBuilder by copying an existing EngineParams instance.
   *
   * @param other The existing instance to copy.
   * @return A new EngineParams RecordBuilder
   */
  public static org.icgc_argo.workflow.search.rabbitmq.schema.EngineParams.Builder newBuilder(
      org.icgc_argo.workflow.search.rabbitmq.schema.EngineParams other) {
    if (other == null) {
      return new org.icgc_argo.workflow.search.rabbitmq.schema.EngineParams.Builder();
    } else {
      return new org.icgc_argo.workflow.search.rabbitmq.schema.EngineParams.Builder(other);
    }
  }

  /** RecordBuilder for EngineParams instances. */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder
      extends org.apache.avro.specific.SpecificRecordBuilderBase<EngineParams>
      implements org.apache.avro.data.RecordBuilder<EngineParams> {

    private java.lang.String defaultContainer;
    private java.lang.String revision;
    private java.lang.String launchDir;
    private java.lang.String projectDir;
    private java.lang.String workDir;
    private java.lang.Boolean latest;
    private java.lang.String resume;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     *
     * @param other The existing Builder to copy.
     */
    private Builder(org.icgc_argo.workflow.search.rabbitmq.schema.EngineParams.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.defaultContainer)) {
        this.defaultContainer = data().deepCopy(fields()[0].schema(), other.defaultContainer);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.revision)) {
        this.revision = data().deepCopy(fields()[1].schema(), other.revision);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.launchDir)) {
        this.launchDir = data().deepCopy(fields()[2].schema(), other.launchDir);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.projectDir)) {
        this.projectDir = data().deepCopy(fields()[3].schema(), other.projectDir);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.workDir)) {
        this.workDir = data().deepCopy(fields()[4].schema(), other.workDir);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.latest)) {
        this.latest = data().deepCopy(fields()[5].schema(), other.latest);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.resume)) {
        this.resume = data().deepCopy(fields()[6].schema(), other.resume);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
    }

    /**
     * Creates a Builder by copying an existing EngineParams instance
     *
     * @param other The existing instance to copy.
     */
    private Builder(org.icgc_argo.workflow.search.rabbitmq.schema.EngineParams other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.defaultContainer)) {
        this.defaultContainer = data().deepCopy(fields()[0].schema(), other.defaultContainer);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.revision)) {
        this.revision = data().deepCopy(fields()[1].schema(), other.revision);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.launchDir)) {
        this.launchDir = data().deepCopy(fields()[2].schema(), other.launchDir);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.projectDir)) {
        this.projectDir = data().deepCopy(fields()[3].schema(), other.projectDir);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.workDir)) {
        this.workDir = data().deepCopy(fields()[4].schema(), other.workDir);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.latest)) {
        this.latest = data().deepCopy(fields()[5].schema(), other.latest);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.resume)) {
        this.resume = data().deepCopy(fields()[6].schema(), other.resume);
        fieldSetFlags()[6] = true;
      }
    }

    /**
     * Gets the value of the 'defaultContainer' field.
     *
     * @return The value.
     */
    public java.lang.String getDefaultContainer() {
      return defaultContainer;
    }

    /**
     * Sets the value of the 'defaultContainer' field.
     *
     * @param value The value of 'defaultContainer'.
     * @return This builder.
     */
    public org.icgc_argo.workflow.search.rabbitmq.schema.EngineParams.Builder setDefaultContainer(
        java.lang.String value) {
      validate(fields()[0], value);
      this.defaultContainer = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
     * Checks whether the 'defaultContainer' field has been set.
     *
     * @return True if the 'defaultContainer' field has been set, false otherwise.
     */
    public boolean hasDefaultContainer() {
      return fieldSetFlags()[0];
    }

    /**
     * Clears the value of the 'defaultContainer' field.
     *
     * @return This builder.
     */
    public org.icgc_argo.workflow.search.rabbitmq.schema.EngineParams.Builder
        clearDefaultContainer() {
      defaultContainer = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
     * Gets the value of the 'revision' field.
     *
     * @return The value.
     */
    public java.lang.String getRevision() {
      return revision;
    }

    /**
     * Sets the value of the 'revision' field.
     *
     * @param value The value of 'revision'.
     * @return This builder.
     */
    public org.icgc_argo.workflow.search.rabbitmq.schema.EngineParams.Builder setRevision(
        java.lang.String value) {
      validate(fields()[1], value);
      this.revision = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
     * Checks whether the 'revision' field has been set.
     *
     * @return True if the 'revision' field has been set, false otherwise.
     */
    public boolean hasRevision() {
      return fieldSetFlags()[1];
    }

    /**
     * Clears the value of the 'revision' field.
     *
     * @return This builder.
     */
    public org.icgc_argo.workflow.search.rabbitmq.schema.EngineParams.Builder clearRevision() {
      revision = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
     * Gets the value of the 'launchDir' field.
     *
     * @return The value.
     */
    public java.lang.String getLaunchDir() {
      return launchDir;
    }

    /**
     * Sets the value of the 'launchDir' field.
     *
     * @param value The value of 'launchDir'.
     * @return This builder.
     */
    public org.icgc_argo.workflow.search.rabbitmq.schema.EngineParams.Builder setLaunchDir(
        java.lang.String value) {
      validate(fields()[2], value);
      this.launchDir = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
     * Checks whether the 'launchDir' field has been set.
     *
     * @return True if the 'launchDir' field has been set, false otherwise.
     */
    public boolean hasLaunchDir() {
      return fieldSetFlags()[2];
    }

    /**
     * Clears the value of the 'launchDir' field.
     *
     * @return This builder.
     */
    public org.icgc_argo.workflow.search.rabbitmq.schema.EngineParams.Builder clearLaunchDir() {
      launchDir = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
     * Gets the value of the 'projectDir' field.
     *
     * @return The value.
     */
    public java.lang.String getProjectDir() {
      return projectDir;
    }

    /**
     * Sets the value of the 'projectDir' field.
     *
     * @param value The value of 'projectDir'.
     * @return This builder.
     */
    public org.icgc_argo.workflow.search.rabbitmq.schema.EngineParams.Builder setProjectDir(
        java.lang.String value) {
      validate(fields()[3], value);
      this.projectDir = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
     * Checks whether the 'projectDir' field has been set.
     *
     * @return True if the 'projectDir' field has been set, false otherwise.
     */
    public boolean hasProjectDir() {
      return fieldSetFlags()[3];
    }

    /**
     * Clears the value of the 'projectDir' field.
     *
     * @return This builder.
     */
    public org.icgc_argo.workflow.search.rabbitmq.schema.EngineParams.Builder clearProjectDir() {
      projectDir = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
     * Gets the value of the 'workDir' field.
     *
     * @return The value.
     */
    public java.lang.String getWorkDir() {
      return workDir;
    }

    /**
     * Sets the value of the 'workDir' field.
     *
     * @param value The value of 'workDir'.
     * @return This builder.
     */
    public org.icgc_argo.workflow.search.rabbitmq.schema.EngineParams.Builder setWorkDir(
        java.lang.String value) {
      validate(fields()[4], value);
      this.workDir = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
     * Checks whether the 'workDir' field has been set.
     *
     * @return True if the 'workDir' field has been set, false otherwise.
     */
    public boolean hasWorkDir() {
      return fieldSetFlags()[4];
    }

    /**
     * Clears the value of the 'workDir' field.
     *
     * @return This builder.
     */
    public org.icgc_argo.workflow.search.rabbitmq.schema.EngineParams.Builder clearWorkDir() {
      workDir = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
     * Gets the value of the 'latest' field.
     *
     * @return The value.
     */
    public java.lang.Boolean getLatest() {
      return latest;
    }

    /**
     * Sets the value of the 'latest' field.
     *
     * @param value The value of 'latest'.
     * @return This builder.
     */
    public org.icgc_argo.workflow.search.rabbitmq.schema.EngineParams.Builder setLatest(
        java.lang.Boolean value) {
      validate(fields()[5], value);
      this.latest = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
     * Checks whether the 'latest' field has been set.
     *
     * @return True if the 'latest' field has been set, false otherwise.
     */
    public boolean hasLatest() {
      return fieldSetFlags()[5];
    }

    /**
     * Clears the value of the 'latest' field.
     *
     * @return This builder.
     */
    public org.icgc_argo.workflow.search.rabbitmq.schema.EngineParams.Builder clearLatest() {
      latest = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
     * Gets the value of the 'resume' field.
     *
     * @return The value.
     */
    public java.lang.String getResume() {
      return resume;
    }

    /**
     * Sets the value of the 'resume' field.
     *
     * @param value The value of 'resume'.
     * @return This builder.
     */
    public org.icgc_argo.workflow.search.rabbitmq.schema.EngineParams.Builder setResume(
        java.lang.String value) {
      validate(fields()[6], value);
      this.resume = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
     * Checks whether the 'resume' field has been set.
     *
     * @return True if the 'resume' field has been set, false otherwise.
     */
    public boolean hasResume() {
      return fieldSetFlags()[6];
    }

    /**
     * Clears the value of the 'resume' field.
     *
     * @return This builder.
     */
    public org.icgc_argo.workflow.search.rabbitmq.schema.EngineParams.Builder clearResume() {
      resume = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public EngineParams build() {
      try {
        EngineParams record = new EngineParams();
        record.defaultContainer =
            fieldSetFlags()[0]
                ? this.defaultContainer
                : (java.lang.String) defaultValue(fields()[0]);
        record.revision =
            fieldSetFlags()[1] ? this.revision : (java.lang.String) defaultValue(fields()[1]);
        record.launchDir =
            fieldSetFlags()[2] ? this.launchDir : (java.lang.String) defaultValue(fields()[2]);
        record.projectDir =
            fieldSetFlags()[3] ? this.projectDir : (java.lang.String) defaultValue(fields()[3]);
        record.workDir =
            fieldSetFlags()[4] ? this.workDir : (java.lang.String) defaultValue(fields()[4]);
        record.latest =
            fieldSetFlags()[5] ? this.latest : (java.lang.Boolean) defaultValue(fields()[5]);
        record.resume =
            fieldSetFlags()[6] ? this.resume : (java.lang.String) defaultValue(fields()[6]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<EngineParams> WRITER$ =
      (org.apache.avro.io.DatumWriter<EngineParams>) MODEL$.createDatumWriter(SCHEMA$);

  @Override
  public void writeExternal(java.io.ObjectOutput out) throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<EngineParams> READER$ =
      (org.apache.avro.io.DatumReader<EngineParams>) MODEL$.createDatumReader(SCHEMA$);

  @Override
  public void readExternal(java.io.ObjectInput in) throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override
  protected boolean hasCustomCoders() {
    return true;
  }

  @Override
  public void customEncode(org.apache.avro.io.Encoder out) throws java.io.IOException {
    if (this.defaultContainer == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.defaultContainer);
    }

    if (this.revision == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.revision);
    }

    if (this.launchDir == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.launchDir);
    }

    if (this.projectDir == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.projectDir);
    }

    if (this.workDir == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.workDir);
    }

    if (this.latest == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeBoolean(this.latest);
    }

    if (this.resume == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.resume);
    }
  }

  @Override
  public void customDecode(org.apache.avro.io.ResolvingDecoder in) throws java.io.IOException {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      if (in.readIndex() != 1) {
        in.readNull();
        this.defaultContainer = null;
      } else {
        this.defaultContainer = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.revision = null;
      } else {
        this.revision = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.launchDir = null;
      } else {
        this.launchDir = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.projectDir = null;
      } else {
        this.projectDir = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.workDir = null;
      } else {
        this.workDir = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.latest = null;
      } else {
        this.latest = in.readBoolean();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.resume = null;
      } else {
        this.resume = in.readString();
      }

    } else {
      for (int i = 0; i < 7; i++) {
        switch (fieldOrder[i].pos()) {
          case 0:
            if (in.readIndex() != 1) {
              in.readNull();
              this.defaultContainer = null;
            } else {
              this.defaultContainer = in.readString();
            }
            break;

          case 1:
            if (in.readIndex() != 1) {
              in.readNull();
              this.revision = null;
            } else {
              this.revision = in.readString();
            }
            break;

          case 2:
            if (in.readIndex() != 1) {
              in.readNull();
              this.launchDir = null;
            } else {
              this.launchDir = in.readString();
            }
            break;

          case 3:
            if (in.readIndex() != 1) {
              in.readNull();
              this.projectDir = null;
            } else {
              this.projectDir = in.readString();
            }
            break;

          case 4:
            if (in.readIndex() != 1) {
              in.readNull();
              this.workDir = null;
            } else {
              this.workDir = in.readString();
            }
            break;

          case 5:
            if (in.readIndex() != 1) {
              in.readNull();
              this.latest = null;
            } else {
              this.latest = in.readBoolean();
            }
            break;

          case 6:
            if (in.readIndex() != 1) {
              in.readNull();
              this.resume = null;
            } else {
              this.resume = in.readString();
            }
            break;

          default:
            throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}
